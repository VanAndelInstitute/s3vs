AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Lambda and API Gateway resources for s3vs'
Parameters:
  Stage:
    Type: String
    Description: API stage name
    Default: "$default"
    MaxLength: 128
    AllowedPattern: "(\\$default|[a-zA-Z_0-9]*)"
  SlidesBucketName:
    Type: String
    Description: Name of the bucket for uploading slides
    MinLength: 3
    MaxLength: 63
    AllowedPattern: "(?!^(\\d{1,3}\\.){3}\\d{1,3}$)(^[a-z0-9]([a-z0-9-]*(\\.[a-z0-9])?)*$(?<!\\-))"
  CustomDomainName:
    Type: String
    Description: FQDN of the API custom domain
    Default: ""
  OpenSlideLayer:
    Type: String
    Description:  ARN of the Lambda layer version for OpenSlide
  PillowSIMDLayer:
    Type: String
    Description:  ARN of the Lambda layer version for PillowSIMD
  libdmtxLayer:
    Type: String
    Description:  ARN of the Lambda layer version for libdmtx
  IccProfilesLayer:
    Type: String
    Description:  ARN of the Lambda layer version for ICC profile files
  FrameAncestors:
    Type: String
    Default: "'none'"
  SlideIdFormat:
    Type: String
    Description: RegEx of the slide ID format
    Default: "\\w+"
  TextractThreshold:
    Type: String
    Default: "85"
  AllowedSigningProfiles:
    Type: CommaDelimitedList
    Description: List of profile version ARNs for the allowed signing profiles

Conditions:
  customDomainName:
    Fn::Not:
    - Fn::Equals:
      - ''
      - !Ref CustomDomainName

Globals:
  Function:
    Runtime: python3.9
    Environment:
      Variables:
        GDAL_DISABLE_READDIR_ON_OPEN: 'YES'

Resources:
  CodeSigningConfig:
    Type: AWS::Lambda::CodeSigningConfig
    Properties: 
      AllowedPublishers: 
        SigningProfileVersionArns: !Ref AllowedSigningProfiles
      CodeSigningPolicies: 
          UntrustedArtifactOnDeployment: Enforce
      Description: !Sub ${AWS::StackName}-signing
  ImageInfo:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-ImageInfo
      CodeUri: image-service
      Handler: app.info_handler
      Timeout: 20
      MemorySize: 640
      CodeSigningConfigArn: !Ref CodeSigningConfig
      Environment:
        Variables:
          API_URL: !If
            - customDomainName
            - !Sub https://${CustomDomainName}/${AWS::StackName}/image-service/
            - !Ref AWS::NoValue # must be set manually
          BUCKET_NAME: !Ref SlidesBucketName
          FRAME_ANCESTORS: !Ref FrameAncestors
      Layers:
        - !Ref OpenSlideLayer
        - !Ref PillowSIMDLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref SlidesBucketName
      Events:
        HttpApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /image-service/{imageId}/info.json
            Method: GET
  ImageProperties:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-ImageProperties
      CodeUri: image-service
      Handler: app.properties_handler
      Timeout: 20
      MemorySize: 640
      CodeSigningConfigArn: !Ref CodeSigningConfig
      Environment:
        Variables:
          BUCKET_NAME: !Ref SlidesBucketName
          FRAME_ANCESTORS: !Ref FrameAncestors
      Layers:
        - !Ref OpenSlideLayer
        - !Ref PillowSIMDLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref SlidesBucketName
      Events:
        HttpApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /image-service/{imageId}/properties.json
            Method: GET
  ImageLabel:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-ImageLabel
      CodeUri: image-service
      Handler: app.label_handler
      Timeout: 20
      MemorySize: 640
      CodeSigningConfigArn: !Ref CodeSigningConfig
      Environment:
        Variables:
          BUCKET_NAME: !Ref SlidesBucketName
          FRAME_ANCESTORS: !Ref FrameAncestors
      Layers:
        - !Ref OpenSlideLayer
        - !Ref PillowSIMDLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref SlidesBucketName
      Events:
        HttpApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /image-service/{imageId}/label.jpg
            Method: GET
  ImageThumbnail:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-ImageThumbnail
      CodeUri: image-service
      Handler: app.thumbnail_handler
      Timeout: 20
      MemorySize: 640
      CodeSigningConfigArn: !Ref CodeSigningConfig
      Environment:
        Variables:
          BUCKET_NAME: !Ref SlidesBucketName
          FRAME_ANCESTORS: !Ref FrameAncestors
      Layers:
        - !Ref OpenSlideLayer
        - !Ref PillowSIMDLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref SlidesBucketName
      Events:
        HttpApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /image-service/{imageId}/thumbnail.jpg
            Method: GET
  ImageTile:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-ImageTile
      CodeUri: image-service
      Handler: app.tile_handler
      Timeout: 20
      MemorySize: 640
      CodeSigningConfigArn: !Ref CodeSigningConfig
      Environment:
        Variables:
          BUCKET_NAME: !Ref SlidesBucketName
          FRAME_ANCESTORS: !Ref FrameAncestors
      Layers:
        - !Ref OpenSlideLayer
        - !Ref PillowSIMDLayer
        - !Ref IccProfilesLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref SlidesBucketName
      Events:
        HttpApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /image-service/{imageId}/{region}/{size}/0/default.jpg
            Method: GET
            RouteSettings:
              ThrottlingBurstLimit: 100
              ThrottlingRateLimit: 400
  ImageMetadataTopic:
    Type: AWS::SNS::Topic
  ApplicationErrorsTopic:
    Type: AWS::SNS::Topic
  ImportMetadata:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-ImportMetadata
      CodeUri: import-metadata
      Handler: app.lambda_handler
      Timeout: 30
      MemorySize: 1536
      CodeSigningConfigArn: !Ref CodeSigningConfig
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 180
        MaximumRetryAttempts: 0
      Environment:
        Variables:
          SLIDEID_FORMAT: !Ref SlideIdFormat
          TEXTRACT_THRESHOLD: !Ref TextractThreshold
          METADATA_TOPIC_ARN: !Ref ImageMetadataTopic
          ERROR_TOPIC_ARN: !Ref ApplicationErrorsTopic
      Layers:
        - !Ref OpenSlideLayer
        - !Ref PillowSIMDLayer
        - !Ref libdmtxLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref SlidesBucketName
        - TextractDetectAnalyzePolicy: {}
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt ImageMetadataTopic.TopicName
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt ApplicationErrorsTopic.TopicName
  ImportMetadataUploadEventPermission:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt ImportMetadata.Arn
      Principal: s3.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Sub arn:aws:s3:::${SlidesBucketName}
  ImportMetadataTimedOutMetricFilter: 
    Type: AWS::Logs::MetricFilter
    Properties: 
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-ImportMetadata
      FilterPattern: 'Task timed out'
      MetricTransformations: 
        - MetricValue: 1
          MetricNamespace: CustomErrorMetrics
          MetricName: !Sub ${AWS::StackName}-ImportMetadataTimedOut
  ImportMetadataTimedOutMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties: 
      AlarmActions: 
        - !Ref ApplicationErrorsTopic
      AlarmDescription: 'Let us know if the slide ID/barcode took too long to scan from the label image.'
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${AWS::StackName}-ImportMetadataTimedOut
      Namespace: CustomErrorMetrics
      Period: 60
      Statistic: Sum
      Threshold: 0
  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: !Ref Stage
      CorsConfiguration:
        AllowMethods: [GET]
        AllowOrigins: ['*']
      DefaultRouteSettings:
        ThrottlingBurstLimit: 5
        ThrottlingRateLimit: 10
  ApiMapping:
    Type: AWS::ApiGatewayV2::ApiMapping
    Condition: customDomainName
    DependsOn:
      - HttpApiStage
    Properties: 
      ApiId: !Ref HttpApi
      ApiMappingKey: !Ref AWS::StackName
      DomainName: !Ref CustomDomainName
      Stage: !Ref Stage

Outputs:
  ApiId:
    Description: Id of HttpApi
    Value: !Ref HttpApi
  ApiUrl:
    Description: URL of the API endpoint
    Value: !If [customDomainName, !Sub 'https://${CustomDomainName}/${AWS::StackName}/', !GetAtt HttpApi.ApiEndpoint]
